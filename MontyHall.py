import random
import math

def setup(n):
    '''
    (int)->(list)

    Generates a random list of lists containing permutations:
        - where index 0 of the sub-list represents the left door
        - where index 1 of the sub-list represents the middle door
        - where index 2 of the sub-list represents the left door

    True indicates that the outcome is favorable behind the door
    False indicated that the outcome is unfavorable behind the door

    Example:
    >>> setup(4)
    [[True,False,False] , [True,False,False] , [False,True,False] , [False,False,True]]
    '''
    lst = []

    # Generates the random list of lists containing possible permutations 
    for i in range(n):
        x = random.randint(1,3)
        
        if x == 1:
            lst.append([True,False,False])
        elif x == 2:
            lst.append([False,True,False])
        else:
            lst.append([False,False,True])

    return lst

def run(n):
    '''
    (list)->(list)

    Goes through the list of lists generated by the setup function and executes the experiment.
    As indicated in the main we awlwas select the left door to be our door.
    After having eleminated the first] incorrect door to the right of our door :
    If we switch doors: the door we selected at first must be the wrong door in order for us to be right.
    If we do not switch  doors: the door we selected at first must be the right door in order for us to be right.

    Example:
    >>> run([[False,True,False] , [True,False,False] , [False,True,False] , [False,False,True]])
    [0.5,0]
    >>> run([[False,True,False] , [False,True,False], [True,False,False] , [False,True,False] , [False,False,True] , [True,False,False]])
    [0.66,0.33]
    '''
    withSwitch = 0
    noSwitch = 0

    k = math.floor(len(n)/2) # number of runs with door switch
    if len(n)%2 != 0: # number of runs without door switch
        l = k+1
    else:
        l = k

    for i in range(k):
        if n[i][0] == False:
            withSwitch += 1

    for i in range(k,l+k):
        if n[i][0] == True:
            noSwitch += 1

    return([withSwitch/k,noSwitch/l])

def main():
    '''
    Runs the experiment
    '''
    flag = True
    print()
    print("This experiment will work by always picking the left door, the first false door to the right will be opened.")
    print("in half of the cases we will have the door change and half we will keep the same door.")

    while flag == True:

        print()
        while True:
            try:
                inp = (int(input("How many Monty Hall tests would you like to run? : ")))
                break
            except:
                print("input must be of type int")
        
        x = run(setup(inp))
        print()
        print('%.2f' % x[0]+ "%% succes rate with switch")
        print('%.2f' % x[1]+ "%% succes rate without switch")
        print("--------------------")
        
        x = input("Would you like to commence another test? Type yes or no :")

        if "no" in x.lower() or x.lower() in ["n", "nah", "nein", "non" ]:
            flag = False

main()
